@model WeeSe.Models.Commessa
@using WeeSe.Extensions
@{
    ViewData["Title"] = $"Commessa {Model.NumeroCommessa}";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <h1 class="h3 mb-1">
                        <i class="fas fa-project-diagram text-primary"></i> 
                        Commessa @Model.NumeroCommessa
                        <span class="@Model.CssClassStato ms-2">@Model.Stato.GetDisplayName()</span>
                    </h1>
                    <div class="d-flex align-items-center gap-3 text-muted">
                        <span><i class="fas fa-building"></i> @Model.Cliente</span>
                        <span><i class="fas fa-calendar"></i> @Model.DataInizio.ToString("dd/MM/yyyy")</span>
                        @if (Model.DataFinePrevista.HasValue)
                        {
                            <span class="@(Model.InRitardo ? "text-danger" : "")">
                                <i class="fas fa-clock"></i> 
                                Scadenza: @Model.DataFinePrevista.Value.ToString("dd/MM/yyyy")
                                @if (Model.InRitardo)
                                {
                                    <i class="fas fa-exclamation-triangle ms-1" title="In ritardo"></i>
                                }
                            </span>
                        }
                    </div>
                </div>
                <div class="d-flex gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
                        <i class="fas fa-edit"></i> Modifica
                    </a>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-info dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fas fa-exchange-alt"></i> Cambia Stato
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var stato in Enum.GetValues<StatoCommessa>())
                            {
                                @if (stato != Model.Stato)
                                {
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="changeStatus(@Model.Id, '@stato')">
                                            @stato.GetDisplayName()
                                        </a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Torna alla Lista
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Colonna principale -->
        <div class="col-lg-8">
            <!-- Informazioni generali -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle text-primary"></i> 
                        Informazioni Generali
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <strong>Numero Commessa:</strong><br>
                            <span class="fs-5 text-primary">@Model.NumeroCommessa</span>
                        </div>
                        @if (Model.Preventivo != null)
                        {
                            <div class="col-md-6">
                                <strong>Preventivo Collegato:</strong><br>
                                <a asp-controller="Preventivi" asp-action="Details" asp-route-id="@Model.PreventivoId" 
                                   class="text-decoration-none">
                                    <i class="fas fa-file-invoice"></i> @Model.Preventivo.NumeroPreventivo
                                </a>
                            </div>
                        }
                        <div class="col-md-6">
                            <strong>Cliente:</strong><br>
                            @Model.Cliente
                        </div>
                        @if (!string.IsNullOrEmpty(Model.IndirizzoCliente))
                        {
                            <div class="col-md-6">
                                <strong>Indirizzo:</strong><br>
                                @Model.IndirizzoCliente
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.Descrizione))
                        {
                            <div class="col-12">
                                <strong>Descrizione:</strong><br>
                                @Model.Descrizione
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Timeline e Date -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-calendar-alt text-primary"></i> 
                        Timeline Commessa
                    </h5>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <div class="timeline-item">
                            <div class="timeline-marker bg-primary"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Data Inizio</h6>
                                <p class="mb-0 text-muted">@Model.DataInizio.ToString("dd/MM/yyyy")</p>
                            </div>
                        </div>
                        @if (Model.DataFinePrevista.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker @(Model.InRitardo ? "bg-danger" : "bg-warning")"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Data Fine Prevista</h6>
                                    <p class="mb-0 @(Model.InRitardo ? "text-danger" : "text-muted")">
                                        @Model.DataFinePrevista.Value.ToString("dd/MM/yyyy")
                                        @if (Model.InRitardo)
                                        {
                                            <span class="badge bg-danger ms-2">In Ritardo</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        }
                        @if (Model.DataFineEffettiva.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Data Fine Effettiva</h6>
                                    <p class="mb-0 text-muted">@Model.DataFineEffettiva.Value.ToString("dd/MM/yyyy")</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Attività -->
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-tasks text-primary"></i> 
                        Attività Commessa
                        @if (Model.Attivita.Any())
                        {
                            <span class="badge bg-secondary">@Model.Attivita.Count</span>
                        }
                    </h5>
                    <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addAttivitaModal">
                        <i class="fas fa-plus"></i> Aggiungi Attività
                    </button>
                </div>
                <div class="card-body">
                    @if (Model.Attivita.Any())
                    {
                        <div class="progress mb-3">
                            <div class="progress-bar @GetProgressBarClass(Model.PercentualeCompletamento)" 
                                 style="width: @Model.PercentualeCompletamento%">
                                @Model.PercentualeCompletamento%
                            </div>
                        </div>

                        <div class="list-group">
                            @foreach (var attivita in Model.Attivita.OrderBy(a => a.Ordine))
                            {
                                <div class="list-group-item @(attivita.Completata ? "list-group-item-success" : attivita.InRitardo ? "list-group-item-warning" : "")">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex align-items-center">
                                                <div class="form-check me-3">
                                                    <input type="checkbox" class="form-check-input" 
                                                           @(attivita.Completata ? "checked" : "") 
                                                           onchange="toggleAttivita(@attivita.Id, this.checked)" />
                                                </div>
                                                <div class="@(attivita.Completata ? "text-decoration-line-through text-muted" : "")">
                                                    <h6 class="mb-1">@attivita.Descrizione</h6>
                                                    <div class="small text-muted">
                                                        @if (attivita.DataPrevista.HasValue)
                                                        {
                                                            <span class="me-3">
                                                                <i class="fas fa-calendar"></i> 
                                                                @attivita.DataPrevista.Value.ToString("dd/MM/yyyy")
                                                            </span>
                                                        }
                                                        @if (!string.IsNullOrEmpty(attivita.Responsabile))
                                                        {
                                                            <span class="me-3">
                                                                <i class="fas fa-user"></i> 
                                                                @attivita.Responsabile
                                                            </span>
                                                        }
                                                        @if (attivita.InRitardo&&!attivita.Completata)
                                                        {
                                                            <span class="text-danger">
                                                                <i class="fas fa-exclamation-triangle"></i> In ritardo
                                                            </span>
                                                        }
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(attivita.Note))
                                                    {
                                                        <small class="text-muted">@attivita.Note</small>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="btn-group btn-group-sm">
                                            <button type="button" class="btn btn-outline-secondary" 
                                                    onclick="editAttivita(@attivita.Id)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button type="button" class="btn btn-outline-danger" 
                                                    onclick="deleteAttivita(@attivita.Id)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
                            <h6 class="text-muted">Nessuna attività presente</h6>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAttivitaModal">
                                <i class="fas fa-plus"></i> Aggiungi Prima Attività
                            </button>
                        </div>
                    }
                </div>
            </div>

            <!-- Note -->
            @if (!string.IsNullOrEmpty(Model.Note) || !string.IsNullOrEmpty(Model.NoteInterne))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-sticky-note text-primary"></i> 
                            Note
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.Note))
                        {
                            <div class="mb-3">
                                <strong>Note Cliente:</strong>
                                <div class="mt-2 p-3 bg-light rounded">
                                    @Html.Raw(Model.Note.Replace("\n", "<br>"))
                                </div>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.NoteInterne))
                        {
                            <div>
                                <strong>Note Interne:</strong>
                                <div class="mt-2 p-3 bg-warning bg-opacity-10 rounded border-start border-warning border-4">
                                    @Html.Raw(Model.NoteInterne.Replace("\n", "<br>"))
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <!-- Colonna laterale -->
        <div class="col-lg-4">
            <!-- Stato e Priorità -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-cogs text-primary"></i> 
                        Stato e Priorità
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="fw-bold">Stato:</span>
                        <span class="@Model.CssClassStato">@Model.Stato.GetDisplayName()</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="fw-bold">Priorità:</span>
                        <span class="@Model.CssClassPriorita">
                            <i class="fas @GetPrioritaIcon(Model.Priorita)"></i>
                            @Model.Priorita.GetDisplayName()
                        </span>
                    </div>
                </div>
            </div>

            <!-- Responsabili -->
            @if (!string.IsNullOrEmpty(Model.Responsabile) || !string.IsNullOrEmpty(Model.TecnicoAssegnato))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-users text-primary"></i> 
                            Responsabili
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.Responsabile))
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="fw-bold">Responsabile:</span>
                                <span>@Model.Responsabile</span>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.TecnicoAssegnato))
                        {
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="fw-bold">Tecnico:</span>
                                <span>@Model.TecnicoAssegnato</span>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Importi -->
            @if (Model.ImportoTotale > 0 || Model.ImportoFatturato > 0)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-euro-sign text-primary"></i> 
                            Importi
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.ImportoTotale > 0)
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="fw-bold">Totale:</span>
                                <span class="fs-5 text-primary">@Model.ImportoTotale.ToString("C")</span>
                            </div>
                        }
                        @if (Model.ImportoFatturato > 0)
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="fw-bold">Fatturato:</span>
                                <span class="fs-6 text-success">@Model.ImportoFatturato.ToString("C")</span>
                            </div>
                            @if (Model.ImportoTotale > 0)
                            {
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar bg-success" 
                                         style="width: @((Model.ImportoFatturato / Model.ImportoTotale * 100).ToString("F1"))%"></div>
                                </div>
                                <small class="text-muted">
                                    @((Model.ImportoFatturato / Model.ImportoTotale * 100).ToString("F1"))% fatturato
                                </small>
                            }
                        }
                        @if (Model.ImportoTotale > 0&&Model.ImportoFatturato < Model.ImportoTotale)
                        {
                            <div class="d-flex justify-content-between align-items-center mt-2">
                                <span class="fw-bold">Residuo:</span>
                                <span class="text-warning">@((Model.ImportoTotale - Model.ImportoFatturato).ToString("C"))</span>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Ordini Collegati -->
            @if (Model.Ordini.Any())
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-shopping-cart text-primary"></i> 
                            Ordini Collegati
                            <span class="badge bg-secondary">@Model.Ordini.Count</span>
                        </h5>
                    </div>
                    <div class="card-body">
                        @foreach (var ordine in Model.Ordini.OrderByDescending(o => o.DataOrdine))
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div>
                                    <a asp-controller="Ordini" asp-action="Details" asp-route-id="@ordine.Id" 
                                       class="text-decoration-none fw-bold">
                                        @ordine.NumeroOrdine
                                    </a>
                                    <br>
                                    <small class="text-muted">@ordine.DataOrdine.ToString("dd/MM/yyyy")</small>
                                </div>
                                <div class="text-end">
                                    <div class="fw-bold">@ordine.ImportoTotale.ToString("C")</div>
                                    <small class="badge bg-info">@ordine.Stato.GetDisplayName()</small>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Metadati -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-info text-primary"></i> 
                        Informazioni Sistema
                    </h5>
                </div>
                <div class="card-body small">
                    <div class="mb-2">
                        <strong>Creata il:</strong><br>
                        @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                        @if (!string.IsNullOrEmpty(Model.CreatedBy))
                        {
                            <span class="text-muted">da @Model.CreatedBy</span>
                        }
                    </div>
                    @if (Model.UpdatedAt.HasValue)
                    {
                        <div>
                            <strong>Ultima modifica:</strong><br>
                            @Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")
                            @if (!string.IsNullOrEmpty(Model.UpdatedBy))
                            {
                                <span class="text-muted">da @Model.UpdatedBy</span>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Aggiungi Attività -->
<div class="modal fade" id="addAttivitaModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Aggiungi Attività</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addAttivitaForm">
                <div class="modal-body">
                    <input type="hidden" name="CommessaId" value="@Model.Id" />
                    <div class="mb-3">
                        <label class="form-label">Descrizione *</label>
                        <input type="text" name="Descrizione" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Data Prevista</label>
                        <input type="date" name="DataPrevista" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Responsabile</label>
                        <input type="text" name="Responsabile" class="form-control" value="@Model.Responsabile" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Note</label>
                        <textarea name="Note" class="form-control" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Salva Attività
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Cambio stato commessa
        function changeStatus(id, newStatus) {
            if (confirm('Cambiare lo stato della commessa?')) {
                $.post('@Url.Action("ChangeStatus")', { id: id, nuovoStato: newStatus })
                    .done(function(data) {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('Errore: ' + data.error);
                        }
                    });
            }
        }

        // Toggle attività
        function toggleAttivita(id, completed) {
            $.post('@Url.Action("ToggleAttivita", "AttivitaCommesse")', { id: id, completed: completed })
                .done(function(data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Errore: ' + data.error);
                    }
                });
        }

        // Aggiungi attività
        $('#addAttivitaForm').submit(function(e) {
            e.preventDefault();
            
            $.post('@Url.Action("Create", "AttivitaCommesse")', $(this).serialize())
                .done(function(data) {
                    if (data.success) {
                        $('#addAttivitaModal').modal('hide');
                        location.reload();
                    } else {
                        alert('Errore: ' + data.error);
                    }
                });
        });

        // Modifica attività
        function editAttivita(id) {
            // Implementa modal per modifica
            console.log('Edit attività:', id);
        }

        // Elimina attività
        function deleteAttivita(id) {
            if (confirm('Sei sicuro di voler eliminare questa attività?')) {
                $.post('@Url.Action("Delete", "AttivitaCommesse")', { id: id })
                    .done(function(data) {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('Errore: ' + data.error);
                        }
                    });
            }
        }
    </script>
}

@section Styles {
    <style>
        .timeline {
            position: relative;
            padding-left: 2rem;
        }

        .timeline::before {
            content: '';
            position: absolute;
            left: 0.75rem;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #dee2e6;
        }

        .timeline-item {
            position: relative;
            margin-bottom: 2rem;
        }

        .timeline-marker {
            position: absolute;
            left: -1.75rem;
            width: 1rem;
            height: 1rem;
            border-radius: 50%;
            border: 2px solid white;
            box-shadow: 0 0 0 2px #dee2e6;
        }

        .timeline-content {
            background: white;
            padding: 1rem;
            border-radius: 0.375rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .card {
            border: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .card-header {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-bottom: 1px solid #dee2e6;
        }

        .list-group-item {
            border-left: 4px solid transparent;
        }

        .list-group-item-success {
            border-left-color: #198754;
            background-color: rgba(25, 135, 84, 0.05);
        }

        .list-group-item-warning {
            border-left-color: #ffc107;
            background-color: rgba(255, 193, 7, 0.05);
        }

        .progress {
            height: 8px;
        }

        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
    </style>
}

@functions {
    string GetPrioritaIcon(PrioritaCommessa priorita) => priorita switch
    {
        PrioritaCommessa.Bassa => "fa-arrow-down",
        PrioritaCommessa.Media => "fa-minus",
        PrioritaCommessa.Alta => "fa-arrow-up",
        PrioritaCommessa.Urgente => "fa-fire",
        _ => "fa-minus"
    };

    @functions {
        string GetProgressBarClass(int percentuale)
        {
            if (percentuale < 25) return "bg-danger";
            if (percentuale < 50) return "bg-warning";
            if (percentuale < 75) return "bg-info";
            return "bg-success";
        }
    }
}
