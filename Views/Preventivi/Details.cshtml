@model WeeSe.Models.Preventivo
@{
    ViewData["Title"] = "Dettagli Preventivo";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3">
                    <i class="fas fa-file-alt text-primary"></i>
                    Preventivo @Model.NumeroPreventivo
                </h1>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning me-2">
                        <i class="fas fa-edit"></i> Modifica
                    </a>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Torna all'elenco
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Info Cliente -->
    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0"><i class="fas fa-building"></i> Sistema tutto vetro WeeSe scorrevole</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">Cliente:</dt>
                        <dd class="col-sm-8"><strong>@Model.Cliente</strong></dd>

                        @if (!string.IsNullOrEmpty(Model.Indirizzo))
                        {
                            <dt class="col-sm-4">Indirizzo:</dt>
                            <dd class="col-sm-8">@Model.Indirizzo</dd>
                        }

                        <dt class="col-sm-4">Data:</dt>
                        <dd class="col-sm-8">@Model.Data.ToString("dd/MM/yyyy")</dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">Venditore:</dt>
                        <dd class="col-sm-8">@Model.Venditore</dd>

                        <dt class="col-sm-4">N. Preventivo:</dt>
                        <dd class="col-sm-8"><strong>@Model.NumeroPreventivo</strong></dd>

                        @if (!string.IsNullOrEmpty(Model.RiferimentoOrdine))
                        {
                            <dt class="col-sm-4">Rif. Ordine:</dt>
                            <dd class="col-sm-8">@Model.RiferimentoOrdine</dd>
                        }

                        <dt class="col-sm-4">Stato:</dt>
                        <dd class="col-sm-8">
                            <span class="badge @GetStatoBadgeClass(Model.Stato)">
                                @Model.Stato
                            </span>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- Dimensioni -->
    @if (Model.Dimensioni.Any())
    {
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">
                    <i class="fas fa-ruler-combined"></i>
                    Dimensioni Finite
                    <span class="badge bg-light text-dark">@Model.NumeroDimensioni</span>
                </h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>N.</th>
                                <th>Larghezza L (mm)</th>
                                <th>Altezza H (mm)</th>
                                <th>Area (m²)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var dimensione in Model.Dimensioni.OrderBy(d => d.Numero))
                            {
                                <tr>
                                    <td><strong>@dimensione.Numero</strong></td>
                                    <td>@dimensione.LarghezzaL</td>
                                    <td>@dimensione.AltezzaH</td>
                                    <td><strong>@dimensione.Area.ToString("F2")</strong></td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-dark">
                            <tr>
                                <th colspan="3">Area Totale:</th>
                                <th>@Model.AreaTotale.ToString("F2") m²</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    }

    <!-- Configurazione -->
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="fas fa-palette"></i> Finitura e Vetro</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-6">Finitura:</dt>
                        <dd class="col-sm-6">@(Model.Finitura ?? "Non specificata")</dd>

                        <dt class="col-sm-6">Vetro:</dt>
                        <dd class="col-sm-6">@(Model.Vetro ?? "Non specificato")</dd>

                        <dt class="col-sm-6">Finitura Vetro:</dt>
                        <dd class="col-sm-6">@(Model.FinituraVetro ?? "Non specificata")</dd>

                        <dt class="col-sm-6">Numero vie:</dt>
                        <dd class="col-sm-6"><strong>@Model.NumeroVie</strong></dd>
                    </dl>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-warning">
                    <h5 class="mb-0"><i class="fas fa-lock"></i> Sistema di Chiusura</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-6">Sistema:</dt>
                        <dd class="col-sm-6">@(Model.SistemaChiusura ?? "Non specificato")</dd>

                        <dt class="col-sm-6">Config. Sinistra:</dt>
                        <dd class="col-sm-6">@(Model.ConfigurazioneSinistra ?? "Non specificata")</dd>

                        <dt class="col-sm-6">Config. Destra:</dt>
                        <dd class="col-sm-6">@(Model.ConfigurazioneDestra ?? "Non specificata")</dd>

                        <dt class="col-sm-6">Apertura Centrale:</dt>
                        <dd class="col-sm-6">@(Model.AperturaCentrale ?? "Non specificata")</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- Accessori -->
    <div class="card mb-4 shadow-sm">
        <div class="card-header" style="background: linear-gradient(45deg, #6f42c1, #e83e8c); color: white;">
            <h5 class="mb-0"><i class="fas fa-cogs"></i> Accessori</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <dl>
                        <dt>Vaschetta Trascinamento:</dt>
                        <dd>@(Model.VaschettaTrascinamento ?? "Non specificata")</dd>
                    </dl>
                </div>
                <div class="col-md-4">
                    <dl>
                        <dt>Tappo:</dt>
                        <dd>@(Model.Tappo ?? "Non specificato")</dd>
                    </dl>
                </div>
                <div class="col-md-4">
                    <dl>
                        <dt>Trasporto e Imballo:</dt>
                        <dd>@(Model.TrasportoImballo ?? "Non specificato")</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- Note -->
    @if (!string.IsNullOrEmpty(Model.Note))
    {
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-dark text-white">
                <h5 class="mb-0"><i class="fas fa-sticky-note"></i> Note</h5>
            </div>
            <div class="card-body">
                <p class="mb-0">@Model.Note</p>
            </div>
        </div>
    }

    <!-- Metadati -->
    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-secondary text-white">
            <h5 class="mb-0"><i class="fas fa-info-circle"></i> Informazioni</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <small class="text-muted">
                        <strong>Creato:</strong> @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                        @if (!string.IsNullOrEmpty(Model.CreatedBy))
                        {
                            <span> da @Model.CreatedBy</span>
                        }
                    </small>
                </div>
                <div class="col-md-6">
                    @if (Model.UpdatedAt.HasValue)
                    {
                        <small class="text-muted">
                            <strong>Modificato:</strong> @Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")
                            @if (!string.IsNullOrEmpty(Model.UpdatedBy))
                            {
                                <span> da @Model.UpdatedBy</span>
                            }
                        </small>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatoBadgeClass(StatoPreventivo stato)
    {
        return stato switch
        {
            StatoPreventivo.Bozza => "bg-secondary",
            StatoPreventivo.Confermato => "bg-info",
            StatoPreventivo.Annullato => "bg-dark",
            _ => "bg-secondary"
        };
    }
}